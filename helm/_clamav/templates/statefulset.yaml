apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "clamav.fullname" . }}
  labels:
    {{- include "clamav.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  serviceName: {{ include "clamav.fullname" . }}
  selector:
    matchLabels:
      {{- include "clamav.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config1: {{ .Files.Get "configurations/clamd.conf" | sha256sum }}
        checksum/config2: {{ .Files.Get "configurations/freshclam.conf" | sha256sum }}
      labels:
        {{- include "clamav.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.priorityClassName }}
      priorityClassName: "{{ .Values.priorityClassName }}"
      {{- end }}
      {{- $imagePullSecrets := concat (.Values.imagePullSecrets | default list) ((.Values.global).imagePullSecrets | default list) -}}
      {{- with $imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init-database
          image: "{{ .Values.initContainer.image.repository }}:{{ .Values.initContainer.image.tag }}"
          imagePullPolicy: {{ .Values.initContainer.image.pullPolicy }}
          command: ["/bin/sh", "-c"]
          args:
            - |
              wget -O /var/lib/clamav/main.cvd {{ .Values.initContainer.clamavMirror }}/main.cvd;
              wget -O /var/lib/clamav/daily.cvd {{ .Values.initContainer.clamavMirror }}/daily.cvd;
              wget -O /var/lib/clamav/bytecode.cvd {{ .Values.initContainer.clamavMirror }}/bytecode.cvd;
          volumeMounts:
          - name: database
            mountPath: /var/lib/clamav
      containers:
        - name: {{ include "clamav.fullname" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          env:
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: "{{ $value }}"
            {{- end }}
          volumeMounts:
            {{- toYaml .Values.volumeMounts | nindent 10 }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          startupProbe:
            exec:
              command: {{ toYaml .Values.probes.command | nindent 14 }}
            initialDelaySeconds: {{ .Values.probes.startup.initialDelaySeconds }}
            failureThreshold: {{ .Values.probes.startup.failureThreshold }}
            periodSeconds: {{ .Values.probes.startup.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.startup.timeoutSeconds }}

          livenessProbe:
            exec:
              command: {{ toYaml .Values.probes.command | nindent 14 }}
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
            failureThreshold: {{ .Values.probes.liveness.failureThreshold }}
            periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.liveness.timeoutSeconds }}

          readinessProbe:
            exec:
              command: {{ toYaml .Values.probes.command | nindent 14 }}
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
            failureThreshold: {{ .Values.probes.readiness.failureThreshold }}
            periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.readiness.timeoutSeconds }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: config-volume
        configMap:
          name: {{ include "clamav.fullname" . }}
  {{- if not .Values.persistentVolume.enabled }}
      - name: database
        emptyDir: {}
  {{- else }}
  volumeClaimTemplates:
    - metadata:
        name: logs
        labels:
          {{- include "clamav.labels" . | nindent 10 }}-logs
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 50Mi
    - metadata:
        name: database
        labels:
          {{- include "clamav.labels" . | nindent 10 }}
        {{- if .Values.persistentVolume.annotations }}
        annotations:
          {{- .Values.persistentVolume.annotations | toYaml | nindent 10 }}
        {{- end }}
      spec:
        accessModes:
        {{- range .Values.persistentVolume.accessModes }}
          - {{ . | quote }}
        {{- end }}
        {{- if .Values.persistentVolume.storageClass }}
        {{- if (eq "-" .Values.persistentVolume.storageClass) }}
        storageClassName: ""
        {{- else }}
        storageClassName: "{{ .Values.persistentVolume.storageClass }}"
        {{- end }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistentVolume.size | quote }}
  {{- end }}
